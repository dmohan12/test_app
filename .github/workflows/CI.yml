# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  testing:

    runs-on: ubuntu-latest
    services: 
      postgres: 
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5434 on service container to the host
          - 5434:5434

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
      with: 
        ruby-version: 2.6
        bundler-cache: true
    - name: Install PostgreSQL 12 client
      run: |
        sudo apt-get install libpq-dev

    - uses: c-hive/gha-yarn-cache@v1
    - name: Install yarn dependencies
      run: yarn install

    - name: Cache Gems
      id: gem-cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
   - name: Build and create DB
     env:
      # use localhost for the host here because we have specified a container for the job.
      # If we were running the job on the VM this would be postgres
       PGHOST: localhost
       PGUSER: postgres
       PGPORT: ${{ job.services.postgres.ports[5434] }} # get randomly assigned published port
       RAILS_ENV: test
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bin/rails db:setup
        
        
      
    - name: Run test
      run: |
          bundle exec rspec
          bundle exec cucumber
      env: 
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        
      
